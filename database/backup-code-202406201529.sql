-- MySQL dump 10.13  Distrib 8.4.0, for macos14 (arm64)
--
-- Host: 192.168.88.21    Database: code
-- ------------------------------------------------------
-- Server version	8.4.0

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!50503 SET NAMES utf8mb4 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `code_template_info`
--

DROP TABLE IF EXISTS `code_template_info`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `code_template_info` (
  `id` bigint NOT NULL COMMENT 'id',
  `group_id` bigint NOT NULL COMMENT '模板分组id',
  `template_type` int DEFAULT NULL COMMENT '数据类型',
  `template_name` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '模板名称',
  `template_desc` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '模板描述',
  `template_filename` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '输出文件名模板',
  `template_body` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci COMMENT '模板内容',
  `create_date` datetime(3) DEFAULT NULL COMMENT '创建日期',
  `modify_date` datetime(3) DEFAULT NULL COMMENT '修改日期',
  `state` int NOT NULL COMMENT '状态。1正常-1标记删除',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='代码模版';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `code_template_info`
--

LOCK TABLES `code_template_info` WRITE;
/*!40000 ALTER TABLE `code_template_info` DISABLE KEYS */;
INSERT INTO `code_template_info` VALUES (1,1,11,'entity代码','entity代码','/entity/${tableMeta.entityName}.java','<#setting number_format=\"#\">\npackage entity;\n\nimport java.io.Serializable;\nimport java.util.HashSet;\nimport java.util.Set;\n\nimport com.fasterxml.jackson.annotation.JsonRawValue;\nimport io.swagger.v3.oas.annotations.media.Schema;\nimport uw.dao.DataEntity;\nimport uw.dao.annotation.ColumnMeta;\nimport uw.dao.annotation.TableMeta;\n\n/**\n * ${tableMeta.entityName}实体类\n * ${tableMeta.remarks!}\n *\n * @author ${author}\n */\n@TableMeta(tableName=\"${tableMeta.tableName}\",tableType=\"${tableMeta.tableType}\")\n@Schema(title = \"${tableMeta.remarks!}\", description = \"${tableMeta.remarks!}\")\npublic class ${tableMeta.entityName} implements DataEntity,Serializable{\n\n<#list columnList as column>\n\n    /**\n     * <#if column.remarks??>${column.remarks}</#if>\n     */\n    @ColumnMeta(columnName=\"${column.columnName}\", dataType=\"${column.propertyType}\"<#if column.columnSize gt 0>, dataSize=${column.columnSize}</#if>, nullable=${(column.propertyName == \"saasId\") ? string(\'false\',column.isNullable)}<#if column.isPrimaryKey?? || column.propertyName == \"saasId\">, primaryKey=true</#if><#if column.isAutoIncrement??>, autoIncrement=true</#if>)\n    @Schema(title = \"${column.remarks!}\", description = \"${column.remarks!}\")<#if column.typeName == \"json\">\n    @JsonRawValue(value = false)</#if>\n    private ${column.propertyType} ${column.propertyName};\n</#list>\n\n    /**\n     * 轻量级状态下更新列表list.\n     */\n    private transient Set<String> UPDATED_COLUMN = null;\n\n    /**\n     * 更新的信息.\n     */\n    private transient StringBuilder UPDATED_INFO = null;\n\n    /**\n     * 获得更改的字段列表.\n     */\n    @Override\n    public Set<String> GET_UPDATED_COLUMN() {\n        return UPDATED_COLUMN;\n    }\n\n    /**\n     * 获得文本更新信息.\n     */\n    @Override\n    public String GET_UPDATED_INFO() {\n        if (this.UPDATED_INFO == null) {\n            return null;\n        } else {\n            return this.UPDATED_INFO.toString();\n        }\n    }\n\n    /**\n     * 清除更新信息.\n     */\n    @Override\n    public void CLEAR_UPDATED_INFO() {\n        UPDATED_COLUMN = null;\n        UPDATED_INFO = null;\n    }\n\n    /**\n     * 初始化set相关的信息.\n     */\n    private void _INIT_UPDATE_INFO() {\n        this.UPDATED_COLUMN = new HashSet<String>();\n        this.UPDATED_INFO = new StringBuilder(\"表${tableMeta.tableName}主键\\\"\" + <#list pkList as pk>\n        this.${pk.propertyName}+ </#list>\"\\\"更新为:\\r\\n\");\n    }\n\n<#list columnList as column>\n\n    /**\n     * 获得<#if column.remarks??>${column.remarks}</#if>。\n     */\n    public ${column.propertyType} get${column.propertyName?cap_first}(){\n        return this.${column.propertyName};\n    }\n</#list>\n\n<#list columnList as column>\n\n    /**\n     * 设置<#if column.remarks??>${column.remarks}</#if>。\n     */\n    public void set${column.propertyName?cap_first}(${column.propertyType} ${column.propertyName}){\n        if ((!String.valueOf(this.${column.propertyName}).equals(String.valueOf(${column.propertyName})))) {\n            if (this.UPDATED_COLUMN == null) {\n                _INIT_UPDATE_INFO();\n            }\n            this.UPDATED_COLUMN.add(\"${column.columnName}\");\n            this.UPDATED_INFO.append(\"${column.columnName}:\\\"\" + this.${column.propertyName}+ \"\\\"=>\\\"\" + ${column.propertyName} + \"\\\"\\r\\n\");\n            this.${column.propertyName} = ${column.propertyName};\n        }\n    }\n</#list>\n\n    /**\n     * 重载toString方法.\n     */\n    @Override\n    public String toString() {\n        StringBuilder sb = new StringBuilder();\n<#list columnList as column>\n        sb.append(\"${column.columnName}:\\\"\" + this.${column.propertyName} + \"\\\"\\r\\n\");\n</#list>\n        return sb.toString();\n    }\n\n}','2023-10-07 23:28:01.000','2024-06-19 17:15:39.356',1),(2,1,12,'controller代码','controller代码','/controller${tableMeta.parentPath}/${tableMeta.entityName}Controller.java','<#assign saasMode = columnList?filter(x->x.propertyName==\"saasId\")?size==1>\npackage controller;\n\nimport io.swagger.v3.oas.annotations.Operation;\nimport io.swagger.v3.oas.annotations.Parameter;\nimport io.swagger.v3.oas.annotations.tags.Tag;\nimport org.springframework.web.bind.annotation.*;\nimport uw.app.common.dto.SysDataHistoryQueryParam;\nimport uw.app.common.entity.SysDataHistory;\nimport uw.app.common.helper.SysDataHistoryHelper;\nimport uw.auth.service.constant.ActionLog;\nimport uw.auth.service.constant.AuthType;\nimport uw.auth.service.constant.UserType;\nimport uw.common.constant.StateCommon;\nimport uw.auth.service.AuthServiceHelper;\nimport uw.auth.service.annotation.MscPermDeclare;\nimport uw.common.dto.ResponseData;\nimport uw.dao.DaoFactory;\nimport uw.dao.DataList;\nimport uw.dao.TransactionException;\n\nimport java.util.Date;\n\n\n/**\n * ${tableMeta.remarks!}管理。\n */\n@RestController\n@RequestMapping(\"${tableMeta.entityPath!}\")\n@Tag(name = \"${tableMeta.remarks!}管理\", description = \"${tableMeta.remarks!}增删改查列管理\")\n@MscPermDeclare(type = UserType.SAAS)\npublic class ${tableMeta.entityName}Controller {\n\n    DaoFactory dao = DaoFactory.getInstance();\n\n    /**\n     * 列表${tableMeta.remarks!}。\n     *\n     * @param queryParam\n     * @return\n     * @throws TransactionException\n     */\n    @GetMapping(\"/list\")\n    @Operation(summary = \"列表${tableMeta.remarks!}\", description = \"列表${tableMeta.remarks!}\")\n    @MscPermDeclare(type = UserType.SAAS, auth = AuthType.PERM, log = ActionLog.REQUEST)\n    public DataList<${tableMeta.entityName}> list(${tableMeta.entityName}QueryParam queryParam) throws TransactionException {\n        AuthServiceHelper.logRef(${tableMeta.entityName}.class);\n        return dao.list(${tableMeta.entityName}.class, queryParam);\n    }\n\n    /**\n     * 加载${tableMeta.remarks!}。\n     *\n     * @param ${pkList[0].propertyName}\n     * @throws TransactionException\n     */\n    @GetMapping(\"/load\")\n    @Operation(summary = \"加载${tableMeta.remarks!}\", description = \"加载${tableMeta.remarks!}\")\n    @MscPermDeclare(type = UserType.SAAS, auth = AuthType.PERM, log = ActionLog.REQUEST)\n    public ${tableMeta.entityName} load(@Parameter(description = \"主键ID\", required = true, example = \"1\") @RequestParam ${pkList[0].propertyType} ${pkList[0].propertyName}) throws TransactionException {\n        AuthServiceHelper.logRef(${tableMeta.entityName}.class,${pkList[0].propertyName});\n        <#if saasMode>\n        return dao.queryForSingleObject(${tableMeta.entityName}.class, new AuthIdQueryParam(${pkList[0].propertyName}));\n        <#else>\n        return dao.load(${tableMeta.entityName}.class, ${pkList[0].propertyName});\n        </#if>\n    }\n\n    /**\n     * 列表${tableMeta.remarks!}历史。\n     *\n     * @param\n     * @return\n     */\n    @GetMapping(\"/history\")\n    @Operation(summary = \"${tableMeta.remarks!}修改历史\", description = \"${tableMeta.remarks!}修改历史\")\n    @MscPermDeclare(type = UserType.SAAS, auth = AuthType.PERM, log = ActionLog.REQUEST)\n    public DataList<SysDataHistory> history(SysDataHistoryQueryParam queryParam) throws TransactionException {\n        AuthServiceHelper.logRef(${tableMeta.entityName}.class, queryParam.getEntityId());\n        queryParam.setEntityClass(${tableMeta.entityName}.class);\n        return SysDataHistoryHelper.listHistory(queryParam);\n    }\n\n    /**\n     * 新增${tableMeta.remarks!}。\n     *\n     * @param ${tableMeta.entityName?uncap_first}\n     * @return\n     * @throws TransactionException\n     */\n    @PostMapping(\"/save\")\n    @Operation(summary = \"新增${tableMeta.remarks!}\", description = \"新增${tableMeta.remarks!}\")\n    @MscPermDeclare(type = UserType.SAAS, auth = AuthType.PERM, log = ActionLog.CRIT)\n    public ResponseData<${tableMeta.entityName}> save(@RequestBody ${tableMeta.entityName} ${tableMeta.entityName?uncap_first}) throws TransactionException {\n        long id = dao.getSequenceId(${tableMeta.entityName}.class);\n        AuthServiceHelper.logRef(${tableMeta.entityName}.class,id);\n        ${tableMeta.entityName?uncap_first}.setId(id);\n        <#if saasMode>\n        ${tableMeta.entityName?uncap_first}.setSaasId(AuthServiceHelper.getSaasId());\n        </#if>\n        ${tableMeta.entityName?uncap_first}.setCreateDate(new Date());\n        ${tableMeta.entityName?uncap_first}.setModifyDate(null);\n        ${tableMeta.entityName?uncap_first}.setState(1);\n        dao.save(${tableMeta.entityName?uncap_first});\n        //保存历史记录\n        SysDataHistoryHelper.saveHistory(${tableMeta.entityName?uncap_first}.get${pkList[0].propertyName?cap_first}(),${tableMeta.entityName?uncap_first},\"${tableMeta.remarks!}\",\"新增${tableMeta.remarks!}\");\n        return ResponseData.success(${tableMeta.entityName?uncap_first});\n    }\n\n    /**\n     * 修改${tableMeta.remarks!}。\n     *\n     * @param ${tableMeta.entityName?uncap_first}\n     * @return\n     * @throws TransactionException\n     */\n    @PutMapping(\"/update\")\n    @Operation(summary = \"修改${tableMeta.remarks!}\", description = \"修改${tableMeta.remarks!}\")\n    @MscPermDeclare(type = UserType.SAAS, auth = AuthType.PERM, log = ActionLog.CRIT)\n    public ResponseData<${tableMeta.entityName}> update(@RequestBody ${tableMeta.entityName} ${tableMeta.entityName?uncap_first}, @Parameter(name = \"remark\", description = \"备注\") @RequestParam String remark) throws TransactionException {\n        AuthServiceHelper.logInfo(${tableMeta.entityName}.class,${tableMeta.entityName?uncap_first}.get${pkList[0].propertyName?cap_first}(),\"修改${tableMeta.remarks!}！操作备注：\"+remark);\n        <#if saasMode>\n        ${tableMeta.entityName} ${tableMeta.entityName?uncap_first}Db = dao.queryForSingleObject(${tableMeta.entityName}.class, new AuthIdQueryParam(${tableMeta.entityName?uncap_first}.get${pkList[0].propertyName?cap_first}()));\n        <#else>\n        ${tableMeta.entityName} ${tableMeta.entityName?uncap_first}Db = dao.load(${tableMeta.entityName}.class, ${tableMeta.entityName?uncap_first}.get${pkList[0].propertyName?cap_first}());\n        </#if>\n        if (${tableMeta.entityName?uncap_first}Db == null) {\n            return ResponseData.warnMsg(\"未找到指定ID的${tableMeta.remarks!}！\");\n        }\n        <#list columnList as column>\n            <#if column.propertyName!=\"id\" && column.propertyName!=\"saasId\"\n            && column.propertyName!=\"createDate\" && column.propertyName!=\"state\" && column.propertyName!=\"modifyDate\">\n        ${tableMeta.entityName?uncap_first}Db.set${column.propertyName?cap_first}(${tableMeta.entityName?uncap_first}.get${column.propertyName?cap_first}());\n            </#if>\n        </#list>\n        ${tableMeta.entityName?uncap_first}Db.setModifyDate(new Date());\n        dao.update(${tableMeta.entityName?uncap_first}Db);\n        SysDataHistoryHelper.saveHistory(${tableMeta.entityName?uncap_first}Db.get${pkList[0].propertyName?cap_first}(),${tableMeta.entityName?uncap_first}Db,\"${tableMeta.remarks!}\",\"修改${tableMeta.remarks!}！操作备注：\"+remark);\n        return ResponseData.success(${tableMeta.entityName?uncap_first}Db);\n    }\n    \n    /**\n     * 启用${tableMeta.remarks!}。\n     *\n     * @param ${pkList[0].propertyName}\n     * @throws TransactionException\n     */\n    @PatchMapping(\"/enable\")\n    @Operation(summary = \"启用${tableMeta.remarks!}\", description = \"启用${tableMeta.remarks!}\")\n    @MscPermDeclare(type = UserType.SAAS, auth = AuthType.PERM, log = ActionLog.CRIT)\n    public ResponseData enable(@Parameter(name = \"${pkList[0].propertyName}\", description = \"主键ID\", example = \"1\") @RequestParam ${pkList[0].propertyType} ${pkList[0].propertyName}, @Parameter(name = \"remark\", description = \"备注\") @RequestParam String remark) throws TransactionException {\n        AuthServiceHelper.logInfo(${tableMeta.entityName}.class,${pkList[0].propertyName},\"启用${tableMeta.remarks!}！操作备注：\"+remark);\n        <#if saasMode>\n        ${tableMeta.entityName} ${tableMeta.entityName?uncap_first} = dao.queryForSingleObject(${tableMeta.entityName}.class, new AuthIdQueryParam(${pkList[0].propertyName}));\n        <#else>\n        ${tableMeta.entityName} ${tableMeta.entityName?uncap_first} = dao.load(${tableMeta.entityName}.class, ${pkList[0].propertyName});\n        </#if>\n        if (${tableMeta.entityName?uncap_first} == null) {\n            return ResponseData.warnMsg(\"未找到指定${pkList[0].propertyName}的${tableMeta.remarks!}！\");\n        }\n        if (${tableMeta.entityName?uncap_first}.getState()!=StateCommon.DISABLED.getValue()){\n            return ResponseData.warnMsg(\"启用${tableMeta.remarks!}失败！当前状态不是禁用状态！\");                \n        }\n        ${tableMeta.entityName?uncap_first}.setModifyDate(new Date());\n        ${tableMeta.entityName?uncap_first}.setState(StateCommon.ENABLED.getValue());\n        dao.update(${tableMeta.entityName?uncap_first});\n        return ResponseData.success();\n    }\n\n    /**\n     * 禁用${tableMeta.remarks!}。\n     *\n     * @param ${pkList[0].propertyName}\n     * @throws TransactionException\n     */\n    @PatchMapping(\"/disable\")\n    @Operation(summary = \"禁用${tableMeta.remarks!}\", description = \"禁用${tableMeta.remarks!}\")\n    @MscPermDeclare(type = UserType.SAAS, auth = AuthType.PERM, log = ActionLog.CRIT)\n    public ResponseData disable(@Parameter(name = \"${pkList[0].propertyName}\", description = \"主键ID\", example = \"1\") @RequestParam ${pkList[0].propertyType} ${pkList[0].propertyName}, @Parameter(name = \"remark\", description = \"备注\") @RequestParam String remark) throws TransactionException {\n        AuthServiceHelper.logInfo(${tableMeta.entityName}.class,${pkList[0].propertyName},\"禁用${tableMeta.remarks!}！操作备注：\"+remark);\n        <#if saasMode>\n        ${tableMeta.entityName} ${tableMeta.entityName?uncap_first} = dao.queryForSingleObject(${tableMeta.entityName}.class, new AuthIdQueryParam(${pkList[0].propertyName}));\n        <#else>\n        ${tableMeta.entityName} ${tableMeta.entityName?uncap_first} = dao.load(${tableMeta.entityName}.class, ${pkList[0].propertyName});\n        </#if>\n        if (${tableMeta.entityName?uncap_first} == null) {\n            return ResponseData.warnMsg(\"未找到指定${pkList[0].propertyName}的${tableMeta.remarks!}！\");\n        }			\n        if (${tableMeta.entityName?uncap_first}.getState()!=StateCommon.ENABLED.getValue()){\n            return ResponseData.warnMsg(\"禁用${tableMeta.remarks!}失败！当前状态不是启用状态！\");                \n        }            \n        ${tableMeta.entityName?uncap_first}.setModifyDate(new Date());\n        ${tableMeta.entityName?uncap_first}.setState(StateCommon.DISABLED.getValue());\n        dao.update(${tableMeta.entityName?uncap_first});\n        return ResponseData.success();\n    }\n\n    /**\n     * 删除${tableMeta.remarks!}。\n     *\n     * @param ${pkList[0].propertyName}\n     * @throws TransactionException\n     */\n    @DeleteMapping(\"/delete\")\n    @Operation(summary = \"删除${tableMeta.remarks!}\", description = \"删除${tableMeta.remarks!}\")\n    @MscPermDeclare(type = UserType.SAAS, auth = AuthType.PERM, log = ActionLog.CRIT)\n    public ResponseData delete(@Parameter(name = \"${pkList[0].propertyName}\", description = \"主键ID\", example = \"1\") @RequestParam ${pkList[0].propertyType} ${pkList[0].propertyName}, @Parameter(name = \"remark\", description = \"备注\") @RequestParam String remark) throws TransactionException {\n        AuthServiceHelper.logInfo(${tableMeta.entityName}.class,${pkList[0].propertyName},\"删除${tableMeta.remarks!}！操作备注：\"+remark);\n        <#if saasMode>\n        ${tableMeta.entityName} ${tableMeta.entityName?uncap_first} = dao.queryForSingleObject(${tableMeta.entityName}.class, new AuthIdQueryParam(${pkList[0].propertyName}));\n        <#else>\n        ${tableMeta.entityName} ${tableMeta.entityName?uncap_first} = dao.load(${tableMeta.entityName}.class, ${pkList[0].propertyName});\n        </#if>\n        if (${tableMeta.entityName?uncap_first} == null) {\n            return ResponseData.warnMsg(\"未找到指定${pkList[0].propertyName}的${tableMeta.remarks!}！\");\n        }\n        if (${tableMeta.entityName?uncap_first}.getState()!=StateCommon.DISABLED.getValue()){\n            return ResponseData.warnMsg(\"删除${tableMeta.remarks!}失败！当前状态不是禁用状态！\");\n        }            \n        ${tableMeta.entityName?uncap_first}.setModifyDate(new Date());\n        ${tableMeta.entityName?uncap_first}.setState(StateCommon.DELETED.getValue());\n        dao.update(${tableMeta.entityName?uncap_first});\n        return ResponseData.success();\n    }\n\n}','2023-10-07 23:28:01.000','2024-06-19 17:19:52.451',1),(3,1,13,'dto代码','dto代码','/dto/${tableMeta.entityName}QueryParam.java','<#assign saasMode = columnList?filter(x->x.propertyName==\"saasId\")?size==1>\npackage dto;\n\nimport io.swagger.v3.oas.annotations.media.Schema;\n<#if saasMode>\nimport uw.app.common.dto.AuthPageQueryParam;\n<#else>\nimport uw.dao.PageQueryParam;\n</#if>\nimport uw.dao.annotation.QueryMeta;\n\nimport java.util.Date;\n\n/**\n* ${tableMeta.remarks!}列表查询参数。\n*/\n@Schema(title = \"${tableMeta.remarks!}列表查询参数\", description = \"${tableMeta.remarks!}列表查询参数\")\npublic class ${tableMeta.entityName}QueryParam extends ${saasMode?string(\"AuthPageQueryParam\",\"PageQueryParam\")}{\n\n<#if saasMode>\n    public ${tableMeta.entityName}QueryParam() {\n        super();\n    }\n\n    public ${tableMeta.entityName}QueryParam(boolean ignoreException) {\n        super(ignoreException);\n    }\n</#if>\n<#list columnList?filter(x->x.propertyName!=\"saasId\") as column>\n    <#if column.propertyObject == \"java.util.Date\">\n    /**\n    * ${column.remarks!}范围\n    */\n    @QueryMeta(expr = \"${column.columnName} between ? and ?\")\n    @Schema(title=\"${column.remarks}范围\", description = \"${column.remarks}范围\")\n    private ${column.propertyObject}[] ${column.propertyName}Range;\n\n    <#elseif column.columnName == \"state\">\n    /**\n    * ${column.remarks!}\n    */\n    @QueryMeta(expr = \"${column.columnName}=?\")\n    @Schema(title=\"${column.remarks}\", description = \"${column.remarks}\")\n    private ${column.propertyObject} ${column.propertyName};\n\n    /**\n    * 正常${column.remarks!}\n    */\n    @QueryMeta(expr = \"${column.columnName}>-1\")\n    @Schema(title=\"正常${column.remarks}\", description = \"正常${column.remarks}\")\n    private Boolean ${column.propertyName}On;\n\n    /**\n    * ${column.remarks!}数组\n    */\n    @QueryMeta(expr = \"${column.columnName} in (?)\")\n    @Schema(title=\"${column.remarks}数组\", description = \"${column.remarks}数组，可同时匹配多个状态。\")\n    private ${column.propertyObject}[] ${column.propertyName}s;\n\n    /**\n    * ${column.remarks!}运算条件。\n    * 可以使用运算符号。\n    */\n    @QueryMeta(expr = \"${column.columnName} ?\")\n    @Schema(title=\"${column.remarks}运算条件\", description = \"${column.remarks}运算条件，可使用><=!比较运算符。\")\n    private String ${column.propertyName}Op;\n\n    <#else>\n    <#if column.propertyObject == \"String\">\n    <#if column.columnSize < 1000>\n\n    /**\n    * ${column.remarks!}\n    */\n    @QueryMeta(expr = \"${column.columnName} like ?\")\n    @Schema(title=\"${column.remarks}\", description = \"${column.remarks}\")\n    private ${column.propertyObject} ${column.propertyName};\n    </#if>\n    <#elseif (column.propertyObject == \"Long\" || column.propertyObject == \"Integer\") && !column.columnName?contains(\"id\") && !column.columnName?contains(\"type\") && !column.columnName?contains(\"state\")>\n\n    /**\n    * ${column.remarks!}\n    */\n    @QueryMeta(expr = \"${column.columnName}=?\")\n    @Schema(title=\"${column.remarks}\", description = \"${column.remarks}\")\n    private ${column.propertyObject} ${column.propertyName};\n\n    /**\n    * ${column.remarks!}范围\n    */\n    @QueryMeta(expr = \"${column.columnName} between ? and ?\")\n    @Schema(title=\"${column.remarks}范围\", description = \"${column.remarks}范围\")\n    private ${column.propertyObject}[] ${column.propertyName}Range;\n    <#else>\n\n    /**\n    * ${column.remarks!}\n    */\n    @QueryMeta(expr = \"${column.columnName}=?\")\n    @Schema(title=\"${column.remarks}\", description = \"${column.remarks}\")\n    private ${column.propertyObject} ${column.propertyName};\n    </#if>\n    </#if>\n</#list>\n\n<#list columnList?filter(x->x.propertyName!=\"saasId\") as column>\n    <#if column.propertyObject == \"java.util.Date\">\n    /**\n    * 获得${column.remarks!}范围。\n    */\n    public ${column.propertyObject}[] get${column.propertyName?cap_first}Range(){\n        return this.${column.propertyName}Range;\n    }\n\n    /**\n    * 设置${column.remarks!}范围。\n    */\n    public void set${column.propertyName?cap_first}Range(${column.propertyObject}[] ${column.propertyName}Range){\n        this.${column.propertyName}Range = ${column.propertyName}Range;\n    }\n    <#elseif column.columnName == \"state\">\n    /**\n    * 获得${column.remarks!}。\n    */\n    public ${column.propertyObject} get${column.propertyName?cap_first}(){\n        return this.${column.propertyName};\n    }\n\n    /**\n    * 设置${column.remarks!}。\n    */\n    public void set${column.propertyName?cap_first}(${column.propertyObject} ${column.propertyName}){\n        this.${column.propertyName} = ${column.propertyName};\n    }\n\n    /**\n    * 获得正常${column.remarks!}。\n    */\n    public Boolean get${column.propertyName?cap_first}On(){\n        return this.${column.propertyName}On;\n    }\n\n    /**\n    * 设置正常${column.remarks!}。\n    */\n    public void set${column.propertyName?cap_first}On(Boolean ${column.propertyName}On){\n        this.${column.propertyName}On = ${column.propertyName}On;\n    }\n\n    /**\n    * 获得${column.remarks!}数组。\n    */\n    public ${column.propertyObject}[] get${column.propertyName?cap_first}s(){\n        return this.${column.propertyName}s;\n    }\n\n    /**\n    * 设置${column.remarks!}数组。\n    */\n    public void set${column.propertyName?cap_first}s(${column.propertyObject}[] ${column.propertyName}s){\n        this.${column.propertyName}s = ${column.propertyName}s;\n    }\n\n    /**\n    * 获得${column.remarks!}运算条件。\n    */\n    public String get${column.propertyName?cap_first}Op(){\n        return this.${column.propertyName}Op;\n    }\n\n    /**\n    * 设置${column.remarks!}运算条件。\n    */\n    public void set${column.propertyName?cap_first}Op(String ${column.propertyName}Op){\n        this.${column.propertyName}Op = ${column.propertyName}Op;\n    }\n    <#else>\n    <#if column.propertyObject == \"String\">\n    <#if column.columnSize < 1000>\n\n    /**\n    * 获得${column.remarks!}。\n    */\n    public ${column.propertyObject} get${column.propertyName?cap_first}(){\n        return this.${column.propertyName};\n    }\n\n    /**\n    * 设置${column.remarks!}。\n    */\n    public void set${column.propertyName?cap_first}(${column.propertyObject} ${column.propertyName}){\n        this.${column.propertyName} = ${column.propertyName};\n    }\n    </#if>\n    <#elseif (column.propertyObject == \"Long\" || column.propertyObject == \"Integer\") && !column.columnName?contains(\"id\") && !column.columnName?contains(\"type\") && !column.columnName?contains(\"state\")>\n\n    /**\n    * 获得${column.remarks!}。\n    */\n    public ${column.propertyObject} get${column.propertyName?cap_first}(){\n        return this.${column.propertyName};\n    }\n\n    /**\n    * 设置${column.remarks!}。\n    */\n    public void set${column.propertyName?cap_first}(${column.propertyObject} ${column.propertyName}){\n        this.${column.propertyName} = ${column.propertyName};\n    }\n\n    /**\n    * 获得${column.remarks!}范围。\n    */\n    public ${column.propertyObject}[] get${column.propertyName?cap_first}Range(){\n        return this.${column.propertyName}Range;\n    }\n\n    /**\n    * 设置${column.remarks!}范围。\n    */\n    public void set${column.propertyName?cap_first}Range(${column.propertyObject}[] ${column.propertyName}Range){\n        this.${column.propertyName}Range = ${column.propertyName}Range;\n    }\n    <#else>\n    /**\n    * 获得${column.remarks!}。\n    */\n    public ${column.propertyObject} get${column.propertyName?cap_first}(){\n        return this.${column.propertyName};\n    }\n\n    /**\n    * 设置${column.remarks!}。\n    */\n    public void set${column.propertyName?cap_first}(${column.propertyObject} ${column.propertyName}){\n        this.${column.propertyName} = ${column.propertyName};\n    }\n    </#if>\n    </#if>\n</#list>\n\n}','2023-10-07 23:28:01.000','2024-06-19 17:15:14.591',1),(5,2,21,'vue3的API代码模版','按照模块生成api代码','/api/${apiName!\"\"}Api.ts','import request from \'@/utils/request\'\nimport { ResponseData, DataList, ESDataList } from \'./baseApi\'\n\n<#list apiInfoList as apiInfo>\n//${apiInfo.title!}\nexport const ${apiInfo.function} = (<#if apiInfo.requestInfo?? && apiInfo.parameterInfoList??>\n\n  data: ${apiInfo.requestInfo.type!\"file\"} ,\n    <#if apiInfo.parameterInfoList?size==1 && (apiInfo.parameterInfoList[0].name?contains(\"queryParam\") || apiInfo.parameterInfoList[0].name?contains(\"QueryParam\"))>\n  params: ${apiInfo.parameterInfoList[0].type}\n    <#else>params: {\n        <#list apiInfo.parameterInfoList as parameter>\n  ${parameter.name}${parameter.required?string(\'\',\'?\')}: ${parameter.type} // ${parameter.title!}\n        </#list>\n}\n    </#if>\n<#elseif apiInfo.requestInfo??>\n\n  data: ${apiInfo.requestInfo.type!\"file\"}\n<#elseif apiInfo.parameterInfoList??>\n    <#if apiInfo.parameterInfoList?size==1 && (apiInfo.parameterInfoList[0].name?contains(\"queryParam\") || apiInfo.parameterInfoList[0].name?contains(\"QueryParam\"))>\n  params: ${apiInfo.parameterInfoList[0].type}\n    <#else>params: {\n        <#list apiInfo.parameterInfoList as parameter>\n  ${parameter.name}${parameter.required?string(\'\',\'?\')}: ${parameter.type} // ${parameter.title!}\n        </#list>\n}</#if></#if>): Promise<${apiInfo.responseInfo.type!\"void\"}> => {\n  return request(\'/${projectName}${apiInfo.path}\', {\n    method: \'${apiInfo.method}\',\n<#if apiInfo.requestInfo?? && apiInfo.parameterInfoList??>\n    data,\n    params\n<#elseif apiInfo.requestInfo??>\n    data\n<#elseif apiInfo.parameterInfoList??>\n    params\n</#if>\n  })\n}\n</#list>\n\n<#list schemaInfoList as schemaInfo>\n//${schemaInfo.title!}\nexport interface ${schemaInfo.name} {\n<#list schemaInfo.propertyList as property>\n  ${property.name!}?: ${property.type} //${property.title!}\n</#list>\n}\n</#list>','2023-10-07 23:28:01.000','2023-10-07 23:28:01.000',1),(6,2,22,'vue3的Router代码模版','按照模块生成router代码','/router/${apiName!\"\"}Router.ts','import type { RouteRecordRaw } from \'vue-router\'\nconst RouterList: RouteRecordRaw[] = [\n<#list apiGroupInfoList as apiGroupInfo>\n<#if apiGroupInfo.hasListFunction()><#if apiGroupInfo_index != 0>,\n</#if>  \n  {\n    path: \'/${apiName!\"\"}${apiGroupInfo.path}\',\n    name: \'${apiName!\"\"}.${apiGroupInfo.function}\',\n    component: () => import(\'@/pages/${apiName!\"\"}${apiGroupInfo.path}/index.vue\'),\n    meta: {\n      title: \'${apiGroupInfo.title!\"空菜单名\"}\'\n    }\n  }<#if apiGroupInfo?has_next></#if></#if></#list>\n]\n\nexport default RouterList','2023-10-07 23:28:01.000','2023-10-07 23:28:01.000',1),(7,2,23,'vue3的Page代码模版','按照模块生成vuePage代码','/pages/${apiName!\"\"}${apiGroupInfo.path}/index.vue','<#if functionList??>\n  <script setup lang=\"ts\">\nimport { computed, getCurrentInstance, type ComponentInternalInstance } from \'vue\'\nimport { SearchFormType } from \'@/components/SearchForm/type\'\nimport {\n<#if apiGroupInfo.apiInfoList??> \n<#list apiGroupInfo.apiInfoList as apiInfo>\n${apiInfo.function}<#sep>,\n</#sep></#list><#if schemaInfo?? || queryInfo ??>,</#if >\n</#if >\n<#if schemaInfo??> type ${ (schemaInfo.name)! }</#if > <#if schemaInfo?? && queryInfo ??>,</#if >\n<#if queryInfo??> type ${ (queryInfo.name)! }</#if >\n} from \'@/api/${apiName!\"app\"}Api\'\nimport { ResponseData,DataList } from \'@/api/baseApi\'\nimport { useCrud } from \'@/utils/useCrud\'\nimport { usePermissionCode } from \'@/utils/hooks\'\n\n<#if functionDelete??>\n// 删除接口参数类型\ninterface deleteParamsType{\n  <#if functionDeleteParameterInfoList??><#list functionDeleteParameterInfoList as parameterInfo>${parameterInfo.name}: ${parameterInfo.type},</#list></#if>\n}\n</#if>\n\n// 获取全局挂载的方法\nconst { proxy } = getCurrentInstance() as ComponentInternalInstance\nconst { dayjs, useActivated } = proxy as any\n\nconst {\n  tableConfig, // 表格相关配置属性\n  handleList, // 列表请求函数\n  <#if functionSave?? || functionUpdate ??>\n  dialogConfig, // 弹窗相关配置属性\n  dialogFormRef, // 弹窗表单ref\n  handleResetDialog, // 重置弹窗表单函数\n  handleSubmitDialog, // 提交弹窗表单\n  </#if>\n  <#if functionDelete??>\n  handleDelete, // 删除函数\n  </#if>\n  <#if functionSave ??>\n  handleOpenSaveDialog, // 打开保存弹窗\n  </#if >\n  <#if functionUpdate??> \n  handleOpenUpdateDialog, // 打开编辑弹窗\n  </#if >\n} = useCrud <${(schemaInfo.name)!}, ${ (queryInfo.name)! }, <#if functionDelete??>deleteParamsType</#if>> ({\n  // 列表请求接口\n  listFn: (): Promise<ResponseData<DataList<${ (schemaInfo.name)! }>>> => {\n    return ${ functionList }(tableConfig.queryParams)\n  },\n  <#if functionSave ??>\n  // 新增请求接口\n  saveFn: (): Promise<ResponseData<${ (schemaInfo.name)! } | void>> => {\n    return ${ functionSave }(dialogConfig.dialogFormData)\n  },\n  </#if >\n  <#if functionUpdate??>\n  // 修改请求接口\n  updateFn: (): Promise<ResponseData<${ (schemaInfo.name)! } | void>> =>{\n    return ${ functionUpdate }(dialogConfig.dialogFormData)\n  },\n  </#if >  \n  <#if functionDelete??>\n  // 删除请求接口\n  deleteFn: (params: deleteParamsType) => ${ functionDelete }(params)\n  </#if>\n})\n\n  // 搜索表单 结构组成数据\nconst searchFormConfig = computed <SearchFormType[]> (() => {\n  return [\n    <#if (queryInfo.propertyList) ??>\n    <#list queryInfo.propertyList as property >\n    <#if (property.name[0]) != \"$\" > <#if property_index != 0 >,\n    </#if > {\n      field: \'${property.name}\',\n      formItem: {\n        label: \'${property.title!}\',\n        labelWidth: \'90\'\n      },\n      formItemWidth: 280,\n      clearable: true,\n      componentType: \'input\',\n      placeholder: \'请输入${property.title!}\',\n    }</#if ></#list >\n    </#if >\n]\n})\n\n<#if functionList??>\n  useActivated(() => {\n    handleList()\n  })\n</#if >\n  </script>\n\n  <template>\n<#if functionList??>\n  <SearchForm \n  v-model=\"tableConfig.queryParams\" \n  :bnt-loading=\"tableConfig.tableLoading\" \n  :list=\"searchFormConfig\" \n  @change=\"handleList\" \n  @search=\"handleList\">\n    <#if functionSave??>\n      <template #right>\n        <el-button class=\"margin-left-10\" type=\"primary\" size=\"small\" round icon=\"Plus\" @click=\"handleOpenSaveDialog\">\n          新增\n        </el-button>\n      </template>\n    </#if>\n  </SearchForm>\n</#if>\n\n<el-table border style=\"width: 100%\" :header-cell-style=\"{\n  backgroundColor: \'var(--el-color-info-light-9)\'\n}\" :data=\"tableConfig.dataList\" v-loading=\"tableConfig.tableLoading\">\n<#if (schemaInfo.propertyList) ??>\n  <#list schemaInfo.propertyList as property >\n    <#if (property.name) == \'createDate\' || (property.name) == \'modifyDate\'>\n      <el-table-column  \n        prop=\"${property.name}\"\n        label=\"${property.title!}\"\n        align=\"center\"\n        width=\"180px\"\n        >\n          <template v-slot=\"{ row }\">\n            <span>{{ dayjs(row[\'${property.name}\']).format(\'YYYY-MM-DD HH:mm:ss\') }}</span>\n          </template>\n        </el-table-column>\n    <#elseif (property.name) == \'state\'>\n      <el-table-column  \n        prop=\"${property.name}\"\n        label=\"${property.title!}\"\n        align=\"center\"\n        width=\"180px\"\n        >\n          <template v-slot=\"{ row }\">\n            <el-link\n              :type=\"row.state === 1 ? \'success\' : \'danger\'\"\n              :underline=\"false\"\n            >\n              {{ row.state === 1 ? \'正常\' : \'删除\' }}\n            </el-link>\n          </template>\n      </el-table-column>\n    <#else>\n      <el-table-column  \n      prop=\"${property.name}\"\n      label=\"${property.title!}\"\n      align=\"center\">\n      </el-table-column>\n    </#if>\n  </#list >\n</#if >\n  <#if functionSave?? || functionUpdate??>\n    <el-table-column label=\"操作\" align=\"center\" width=\"220\">\n      <template #default=\"scope\">\n        <el-button-group v-if=\"scope.row.state !== -1\">\n          <#if functionUpdate??> \n            <el-tooltip\n            content=\"修改\"\n            placement=\"top\"\n            >\n              <el-button\n                type=\"primary\"\n                icon=\"Edit\"\n                size=\"small\"\n                v-permission=\"usePermissionCode(\'update\')\"\n                @click=\"handleOpenUpdateDialog(scope.row)\"\n              ></el-button>\n            </el-tooltip>\n          </#if>\n          <#if functionDelete??>\n          <template v-if=\"scope.row.state === 1\">\n              <el-tooltip\n                content=\"删除\"\n                placement=\"top\"\n              >\n                <el-button\n                  type=\"danger\"\n                  icon=\"Delete\"\n                  size=\"small\"\n                  v-permission=\"usePermissionCode(\'delete\')\"\n                  @click=\"handleDelete({<#if functionDeleteParameterInfoList??><#list functionDeleteParameterInfoList as parameterInfo>scope.row.${parameterInfo.name}<#sep>, </#sep></#list></#if>})\"\n                ></el-button>\n            </el-tooltip>\n          </template>\n          </#if>\n        </el-button-group>\n      </template>\n    </el-table-column>\n  </#if>\n</el-table>\n\n<#if functionList??>\n<!-- 分页组件 -->\n  <Pagination  \n  v-model:page-size=\"tableConfig.queryParams.$rn\"\n  @page-size-change=\"handleList\"\n  :total=\"tableConfig.sizeAll\"\n  v-model:current-page=\"tableConfig.queryParams.$pg\"\n  @current-change=\"handleList\" \n  />\n</#if>\n\n<#if functionSave?? || functionUpdate??>\n<!-- 新增、编辑弹窗 -->\n  <el-dialog \n    v-model=\"dialogConfig.dialogShow\" \n    :title=\"dialogConfig.dialogTitle\" \n    destroy-on-close \n    @close=\"handleResetDialog\"\n    draggable\n    :close-on-click-modal=\"false\"\n  >\n    <#if (schemaInfo.propertyList) ??>\n    <div v-loading=\"dialogConfig.dialogLoading\">\n        <el-form\n        ref=\"dialogFormRef\"\n        :model=\"dialogConfig.dialogFormData\"\n        label-width=\"120px\"\n        status-icon\n      >\n        <el-row>\n          <#list schemaInfo.propertyList as property >\n            <#if (property.name) != \"id\" && (property.name) != \"saasId\" && (property.name) != \"createDate\" && (property.name) != \"modifyDate\" && (property.name) != \"state\">\n            <el-col :span=\"20\">\n              <el-form-item label=\"${property.title!}\" prop=\"${property.name}\" :rules=\"[{ required: true, message: \'请输入${property.title!}\' }]\">\n                <el-input\n                  v-model=\"dialogConfig.dialogFormData.${property.name}\"\n                  placeholder=\"请输入${property.title!}\"\n                  clearable\n                  ></el-input>\n            </el-form-item>\n            </el-col>\n            </#if >\n          </#list >\n        </el-row>\n      </el-form>\n      </div>\n      </#if >\n    <template #footer>\n      <el-button @click=\"dialogConfig.dialogShow = false\" icon=\"Close\">取消</el-button>\n      <el-button type=\"primary\" @click=\"handleSubmitDialog\" :loading=\"dialogConfig.dialogLoading\" icon=\"Check\">\n        {{ dialogConfig.dialogType === 0 ? \'新增\' : \'修改\' }}\n      </el-button>\n    </template>\n  </el-dialog>\n</#if>\n  </template>\n\n  <style lang=\"scss\" scoped></style>\n  <#else>\n    // 此页面无,需要手动开发\n</#if>','2023-10-07 23:28:01.000','2024-03-05 09:43:07.541',1),(8,5,24,'i18n资源文件','i18n资源文件','/i18n/${apiName!\"\"}Menu.json','{\n<#list apiCatalogInfoList as apiCatalogInfo>\n  \"${apiCatalogInfo.path}\": \"${apiCatalogInfo.title!\"空菜单名\"}\",\n<#list apiCatalogInfo.apiGroupInfoList as apiGroupInfo>\n  \"${apiGroupInfo.path}\": \"${apiGroupInfo.title!\"空菜单名\"}\",\n</#list></#list>\n}','2023-10-07 23:28:01.000','2023-10-07 23:28:01.000',1),(9,6,21,'vue3的API代码模版','按照模块生成api代码','/api/${apiName!\"\"}Api.ts','import request from \'@/utils/request\'\nimport { ResponseData, DataList, ESDataList } from \'./baseApi\'\n\n<#list apiInfoList as apiInfo>\n//${apiInfo.title!}\nexport const ${apiInfo.function} = (<#if apiInfo.requestInfo?? && apiInfo.parameterInfoList??>\n\n  data: ${apiInfo.requestInfo.type!\"file\"} ,\n    <#if apiInfo.parameterInfoList?size==1 && (apiInfo.method == \'POST\' || apiInfo.parameterInfoList[0].name?contains(\"queryParam\") || apiInfo.parameterInfoList[0].name?contains(\"QueryParam\"))>\n  params: ${apiInfo.parameterInfoList[0].type}\n    <#else>params: {\n        <#list apiInfo.parameterInfoList as parameter>\n  ${parameter.name}${parameter.required?string(\'\',\'?\')}: ${parameter.type} // ${parameter.title!}\n        </#list>\n}\n    </#if>\n<#elseif apiInfo.requestInfo??>\n\n  data: ${apiInfo.requestInfo.type!\"file\"}\n<#elseif apiInfo.parameterInfoList??>\n    <#if apiInfo.parameterInfoList?size==1 && (apiInfo.method == \'POST\' || apiInfo.parameterInfoList[0].name?contains(\"queryParam\") || apiInfo.parameterInfoList[0].name?contains(\"QueryParam\"))>\n  params: ${apiInfo.parameterInfoList[0].type}\n    <#else>params: {\n        <#list apiInfo.parameterInfoList as parameter>\n  ${parameter.name}${parameter.required?string(\'\',\'?\')}: ${parameter.type} // ${parameter.title!}\n        </#list>\n}</#if></#if>): Promise<${apiInfo.responseInfo.type!\"void\"}> => {\n  return request(\'/${projectName}${apiInfo.path}\', {\n    method: \'${apiInfo.method}\',\n<#if apiInfo.requestInfo?? && apiInfo.parameterInfoList??>\n    data,\n    params\n<#elseif apiInfo.requestInfo??>\n    data\n<#elseif apiInfo.parameterInfoList??>\n    params\n</#if>\n  })\n}\n</#list>\n\n<#list schemaInfoList as schemaInfo>\n//${schemaInfo.title!}\nexport interface ${schemaInfo.name} {\n<#list schemaInfo.propertyList as property>\n  ${property.name!}?: ${property.type} //${property.title!}\n</#list>\n}\n</#list>','2023-10-07 23:28:01.000','2023-10-10 19:23:20.476',1),(10,6,22,'vue3的Router代码模版','按照模块生成router代码','/router/${apiName!\"\"}.ts','import type { RouteRecordRaw } from \'vue-router\'\n\nconst RouterList: RouteRecordRaw[] = [\n<#list apiGroupInfoList as apiGroupInfo>\n<#if apiGroupInfo.hasListFunction()><#if apiGroupInfo_index != 0>,\n</#if>  \n  {\n    path: \'/${apiName!\"\"}${apiGroupInfo.path}\',\n    name: \'${apiName!\"\"}.${apiGroupInfo.function}\',\n    component: () => import(\'@/pages/${apiName!\"\"}${apiGroupInfo.path}/index.vue\'),\n    meta: {\n      title: \'${apiGroupInfo.title!\"空菜单名\"}\'\n    }\n  }<#if apiGroupInfo?has_next></#if></#if></#list>\n]\n\nexport default RouterList','2023-10-07 23:28:01.000','2023-10-07 23:28:01.000',1),(11,6,23,'vue3的Page代码模版','按照模块生成vuePage代码','/pages/${apiName!\"\"}${apiGroupInfo.path}/index.vue','<#if functionList??>\n<script setup lang=\"ts\">\nimport { computed, getCurrentInstance, type ComponentInternalInstance } from \'vue\'\nimport { SearchFormType } from \'@/components/SearchForm/type\'\nimport {\n<#if apiGroupInfo.apiInfoList??> \n<#list apiGroupInfo.apiInfoList as apiInfo>\n  ${apiInfo.function}<#sep>,\n</#sep></#list><#if schemaInfo?? || queryInfo ??>,</#if >\n</#if >\n  <#if schemaInfo??> type ${ (schemaInfo.name)! }</#if > <#if schemaInfo?? && queryInfo ??>,</#if >\n  <#if queryInfo??> type ${ (queryInfo.name)! }</#if >\n} from \'@/api/${apiName!\"app\"}Api\'\nimport { ResponseData,DataList } from \'@/api/baseApi\'\nimport { useI18n } from \'vue-i18n\'\nimport { useCrud } from \'@/utils/useCrud\'\nimport { usePermissionCode } from \'@/utils/hooks\'\n\n<#if functionDelete??>\n// 删除接口参数类型\ninterface deleteParamsType{\n  <#if functionDeleteParameterInfoList??><#list functionDeleteParameterInfoList as parameterInfo>${parameterInfo.name}: ${parameterInfo.type},</#list></#if>\n}\n</#if>\n\n// 获取全局挂载的方法\nconst { proxy } = getCurrentInstance() as ComponentInternalInstance\nconst { dayjs, useActivated } = proxy as any\nconst { t } = useI18n()\n\nconst {\n  tableConfig, // 表格相关配置属性\n  handleList, // 列表请求函数\n  <#if functionSave?? || functionUpdate ??>\n  dialogConfig, // 弹窗相关配置属性\n  dialogFormRef, // 弹窗表单ref\n  handleResetDialog, // 重置弹窗表单函数\n  handleSubmitDialog, // 提交弹窗表单\n  </#if>\n  <#if functionDelete??>\n  handleDelete, // 删除函数\n  </#if>\n  <#if functionSave ??>\n  handleOpenSaveDialog, // 打开保存弹窗\n  </#if >\n  <#if functionUpdate??> \n  handleOpenUpdateDialog, // 打开编辑弹窗\n  </#if >\n} = useCrud <${(schemaInfo.name)!}, ${ (queryInfo.name)! }, <#if functionDelete??>deleteParamsType</#if>> ({\n  // 列表请求接口\n  listFn: (): Promise<ResponseData<DataList<${ (schemaInfo.name)! }>>> => {\n    return ${ functionList }(tableConfig.queryParams)\n  },\n  <#if functionSave ??>\n  // 新增请求接口\n  saveFn: (): Promise<ResponseData<${ (schemaInfo.name)! } | void>> => {\n    return  ${ functionSave }(dialogConfig.dialogFormData)\n  },\n  </#if >\n  <#if functionUpdate??>\n  // 修改请求接口\n  updateFn: (): Promise<ResponseData<${ (schemaInfo.name)! } | void>> =>{\n    return ${ functionUpdate }(dialogConfig.dialogFormData)\n  },\n  </#if >  \n  <#if functionDelete??>\n  // 删除请求接口\n   deleteFn: (params: deleteParamsType) => ${ functionDelete }(params)\n  </#if>\n})\n\n  // 搜索表单 结构组成数据\nconst searchFormConfig = computed < SearchFormType[] > (() => {\n  return [\n    <#if (queryInfo.propertyList) ??>\n    <#list queryInfo.propertyList as property >\n    <#if (property.name[0]) != \"$\" > <#if property_index != 0 >,\n    </#if > {\n      field: \'${property.name}\',\n      formItem: {\n        label: t(\'${apiName!\"\"}.${(queryInfo.name)!}.${property.name!}\'),\n        labelWidth: \'90\'\n      },\n      formItemWidth: 280,\n      clearable: true,\n      componentType: \'input\',\n      placeholder: t(\'pleaseInput\') + t(\'${apiName!\"\"}.${(schemaInfo.name)!}.${property.name!}\')\n    }</#if ></#list >\n    </#if >\n]\n})\n\n<#if functionList??>\n  useActivated(() => {\n    handleList()\n  })\n</#if >\n  </script>\n\n  <template>\n    <#if functionList??>\n      <SearchForm v-model=\"tableConfig.queryParams\" :bnt-loading=\"tableConfig.tableLoading\" :list=\"searchFormConfig\" @change=\"handleList\" @search=\"handleList\">\n        <#if functionSave??>\n          <template #right>\n            <el-button class=\"margin-left-10\" type=\"primary\" size=\"small\" round icon=\"Plus\" @click=\"handleOpenSaveDialog\">\n              {{ t(\'add\') }}\n            </el-button>\n          </template>\n        </#if>\n      </SearchForm>\n    </#if>\n\n    <el-table border style=\"width: 100%\" :header-cell-style=\"{\n      backgroundColor: \'var(--el-color-info-light-9)\'\n    }\" :data=\"tableConfig.dataList\" v-loading=\"tableConfig.tableLoading\">\n    <#if (schemaInfo.propertyList) ??>\n     <#list schemaInfo.propertyList as property >\n       <#if (property.name) == \'createDate\' || (property.name) == \'modifyDate\'>\n          <el-table-column  \n            prop=\"${property.name}\"\n            :label=\"t(\'${apiName!\"\"}.${(schemaInfo.name)!}.${property.name!}\')\"\n            align=\"center\"\n            width=\"180px\"\n            >\n              <template v-slot=\"{ row }\">\n                <span>{{ dayjs(row[\'${property.name}\']).format(\'YYYY-MM-DD HH:mm:ss\') }}</span>\n              </template>\n            </el-table-column>\n       <#elseif (property.name) == \'state\'>\n         <el-table-column  \n            prop=\"${property.name}\"\n            :label=\"t(\'${apiName!\"\"}.${(schemaInfo.name)!}.${property.name!}\')\"\n            align=\"center\"\n            width=\"180px\"\n            >\n              <template v-slot=\"{ row }\">\n                <el-link\n                  :type=\"row.state === 1 ? \'success\' : \'danger\'\"\n                  :underline=\"false\"\n                >\n                  {{ row.state === 1 ? t(\'normal\') : t(\'delete\') }}\n                </el-link>\n              </template>\n          </el-table-column>\n       <#else>\n          <el-table-column  \n          prop=\"${property.name}\"\n          :label=\"t(\'${apiName!\"\"}.${(schemaInfo.name)!}.${property.name!}\')\"\n          align=\"center\">\n          </el-table-column>\n        </#if>\n      </#list >\n    </#if >\n      <#if functionSave?? || functionUpdate??>\n        <el-table-column :label=\"t(\'control\')\" align=\"center\" width=\"220\">\n          <template #default=\"scope\">\n            <el-button-group v-if=\"scope.row.state !== -1\">\n              <#if functionUpdate??> \n                <el-tooltip\n                :content=\"t(\'edit\')\"\n                placement=\"top\"\n                >\n                  <el-button\n                    type=\"primary\"\n                    icon=\"Edit\"\n                    size=\"small\"\n                    v-permission=\"usePermissionCode(\'update\')\"\n                    @click=\"handleOpenUpdateDialog(scope.row)\"\n                  ></el-button>\n                </el-tooltip>\n              </#if>\n              <#if functionDelete??>\n              <template v-if=\"scope.row.state === 1\">\n                  <el-tooltip\n                    :content=\"t(\'delete\')\"\n                    placement=\"top\"\n                  >\n                    <el-button\n                      type=\"danger\"\n                      icon=\"Delete\"\n                      size=\"small\"\n                      v-permission=\"usePermissionCode(\'delete\')\"\n                      @click=\"handleDelete({<#if functionDeleteParameterInfoList??><#list functionDeleteParameterInfoList as parameterInfo>${parameterInfo.name}:scope.row.${parameterInfo.name}<#sep>, </#sep></#list></#if>})\"\n                    ></el-button>\n                </el-tooltip>\n              </template>\n              </#if>\n            </el-button-group>\n          </template>\n        </el-table-column>\n      </#if>\n    </el-table>\n\n    <#if functionList??>\n    <!-- 分页组件 -->\n      <Pagination  \n      v-model:page-size=\"tableConfig.queryParams.$rn\"\n      @page-size-change=\"handleList\"\n      :total=\"tableConfig.sizeAll\"\n      v-model:current-page=\"tableConfig.queryParams.$pg\"\n      @current-change=\"handleList\" \n      />\n    </#if>\n\n    <#if functionSave?? || functionUpdate??>\n    <!-- 新增、编辑弹窗 -->\n      <el-dialog \n        v-model=\"dialogConfig.dialogShow\" \n        :title=\"dialogConfig.dialogTitle\" \n        destroy-on-close \n        @close=\"handleResetDialog\"\n        draggable\n        :close-on-click-modal=\"false\"\n      >\n       <#if (schemaInfo.propertyList) ??>\n        <div v-loading=\"dialogConfig.dialogLoading\">\n           <el-form\n            ref=\"dialogFormRef\"\n            :model=\"dialogConfig.dialogFormData\"\n            label-width=\"120px\"\n            status-icon\n          >\n            <el-row>\n             <#list schemaInfo.propertyList as property >\n               <#if (property.name) != \"id\" && (property.name) != \"saasId\" && (property.name) != \"createDate\" && (property.name) != \"modifyDate\" && (property.name) != \"state\">\n                <el-col :span=\"20\">\n                  <el-form-item \n                  :label=\"t(\'${apiName!\"\"}.${(schemaInfo.name)!}.${property.name!}\')\" \n                  prop=\"${property.name}\" \n                  :rules=\"[{ required: true, message: t(\'pleaseInput\') + t(\'${apiName!\"\"}.${(schemaInfo.name)!}.${property.name!}\') }]\">\n                    <el-input\n                      v-model=\"dialogConfig.dialogFormData.${property.name}\"\n                      :placeholder=\"t(\'pleaseInput\') + t(\'${apiName!\"\"}.${(schemaInfo.name)!}.${property.name!}\')\"\n                      clearable\n                      ></el-input>\n                </el-form-item>\n                </el-col>\n               </#if >\n             </#list >\n            </el-row>\n          </el-form>\n          </div>\n         </#if >\n        <template #footer>\n          <el-button @click=\"dialogConfig.dialogShow = false\" icon=\"Close\">{{ t(\'cancel\') }}</el-button>\n          <el-button type=\"primary\" @click=\"handleSubmitDialog\" :loading=\"dialogConfig.dialogLoading\" icon=\"Check\">\n            {{ dialogConfig.dialogType === 0 ? t(\'add\') : t(\'edit\') }}\n          </el-button>\n        </template>\n      </el-dialog>\n    </#if>\n  </template>\n\n  <style lang=\"scss\" scoped></style>\n  <#else>\n    // 此页面无,需要手动开发\n</#if>','2023-10-07 23:28:01.000','2024-03-05 09:49:26.079',1),(12,6,24,'vue3的I18N代码模板','按照模块生成i18n代码','/i18n/${apiName!\"\"}.json','{\n  \"${projectName}\": \"${apiName}\",\n<#list apiCatalogInfoList as apiCatalogInfo>\n  \"/${apiName}${apiCatalogInfo.path}\": \"${apiCatalogInfo.title!\"空菜单名\"}\",\n<#list apiCatalogInfo.apiGroupInfoList as apiGroupInfo>\n  \"/${apiName}${apiGroupInfo.path}\": \"${apiGroupInfo.title!\"空菜单名\"}\",\n</#list></#list>\n  \"${apiName!\"\"}\": {\n    <#list schemaInfoList as schemaInfo>\n    \"${schemaInfo.name}\": {\n    <#list schemaInfo.propertyList as property>\n       <#if (property.name[0]) != \"$\">\n      \"${property.name!}\": \"${property.title!}\"<#sep>,</#sep>\n       </#if></#list>\n    }<#sep>,</#sep>\n    </#list>\n  }\n}','2023-10-07 23:28:01.000','2023-10-07 23:28:01.000',1),(15,8,21,'uniapp的API代码模版','按照模板生成uniapp的api代码\n','/api/${apiName!\"\"}Api.ts','import request from \'@/api/request\'\nimport type { ResponseData, DataList } from \'@/api/type/API_TYPE\'\n\n<#list apiInfoList as apiInfo>\n/**\n * ${apiInfo.title!}\n */\nexport const ${apiInfo.function} = (<#if apiInfo.requestInfo?? && apiInfo.parameterInfoList??>\n\n  data: ${apiInfo.requestInfo.type!\"file\"} ,\n    <#if apiInfo.parameterInfoList?size==1 && (apiInfo.parameterInfoList[0].name?contains(\"queryParam\") || apiInfo.parameterInfoList[0].name?contains(\"QueryParam\"))>\n  params: ${apiInfo.parameterInfoList[0].type}\n    <#else>params: {\n        <#list apiInfo.parameterInfoList as parameter>\n  ${parameter.name}${parameter.required?string(\'\',\'?\')}: ${parameter.type} // ${parameter.title!}\n        </#list>\n}\n    </#if>\n<#elseif apiInfo.requestInfo??>\n\n  data: ${apiInfo.requestInfo.type!\"file\"}\n<#elseif apiInfo.parameterInfoList??>\n    <#if apiInfo.parameterInfoList?size==1 && (apiInfo.parameterInfoList[0].name?contains(\"queryParam\") || apiInfo.parameterInfoList[0].name?contains(\"QueryParam\"))>\n  params: ${apiInfo.parameterInfoList[0].type}\n    <#else>params: {\n        <#list apiInfo.parameterInfoList as parameter>\n  ${parameter.name}${parameter.required?string(\'\',\'?\')}: ${parameter.type} // ${parameter.title!}\n        </#list>\n}</#if></#if>) => {\n  return request({\n    url: \'/${projectName}${apiInfo.path}\',\n    method: \'${apiInfo.method}\',\n<#if apiInfo.requestInfo?? && apiInfo.parameterInfoList??>\n    data,\n    params\n<#elseif apiInfo.requestInfo??>\n    data\n<#elseif apiInfo.parameterInfoList??>\n    params\n</#if>\n  }) as Promise<${apiInfo.responseInfo.type!\"void\"}>\n}\n</#list>\n\n<#list schemaInfoList as schemaInfo>\n/**\n * ${schemaInfo.title!}\n */\nexport interface ${schemaInfo.name} {\n<#list schemaInfo.propertyList as property>\n  ${property.name!}?: ${property.type} //${property.title!}\n</#list>\n}\n</#list>','2023-10-07 23:28:01.000','2024-06-20 09:33:07.530',1);
/*!40000 ALTER TABLE `code_template_info` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sys_crit_log`
--

DROP TABLE IF EXISTS `sys_crit_log`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sys_crit_log` (
  `id` bigint NOT NULL COMMENT 'ID',
  `saas_id` bigint NOT NULL COMMENT 'saasId',
  `mch_id` bigint DEFAULT NULL COMMENT '商户ID',
  `user_id` bigint NOT NULL COMMENT '用户id',
  `user_type` int DEFAULT NULL COMMENT '用户类型',
  `group_id` bigint DEFAULT NULL COMMENT '用户组ID',
  `user_name` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '用户名',
  `nick_name` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '用户昵称',
  `real_name` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '真实名称',
  `ref_type` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '操作对象类型',
  `ref_id` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '操作对象id',
  `api_uri` varchar(200) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '请求uri',
  `api_name` varchar(200) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT 'API名称',
  `op_state` varchar(200) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '操作状态',
  `op_log` text CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci COMMENT '日志内容',
  `request_body` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci COMMENT '请求参数',
  `response_body` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci COMMENT '响应日志',
  `response_millis` bigint DEFAULT NULL COMMENT '请求毫秒数',
  `exception` text CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci COMMENT '异常信息',
  `status_code` int DEFAULT NULL COMMENT '响应状态码',
  `app_info` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '应用信息',
  `app_host` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '应用主机',
  `user_ip` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '用户ip',
  `request_date` datetime(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '请求时间',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='系统关键日志';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sys_crit_log`
--

LOCK TABLES `sys_crit_log` WRITE;
/*!40000 ALTER TABLE `sys_crit_log` DISABLE KEYS */;
/*!40000 ALTER TABLE `sys_crit_log` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sys_data_history`
--

DROP TABLE IF EXISTS `sys_data_history`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sys_data_history` (
  `id` bigint NOT NULL COMMENT 'ID',
  `saas_id` bigint NOT NULL COMMENT 'saasId',
  `mch_id` bigint DEFAULT NULL COMMENT '商户ID',
  `user_id` bigint NOT NULL COMMENT '用户ID',
  `user_type` int DEFAULT NULL COMMENT '用户类型',
  `group_id` bigint DEFAULT NULL COMMENT '用户的组ID',
  `user_name` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '用户名称',
  `nick_name` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '用户昵称',
  `real_name` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '真实名称',
  `entity_class` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '实体类',
  `entity_id` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '实体ID',
  `entity_name` varchar(200) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '实体名',
  `entity_data` json DEFAULT NULL COMMENT '实体数据',
  `entity_update_info` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci COMMENT '实体修改信息',
  `remark` text CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci COMMENT '备注信息',
  `user_ip` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '用户IP',
  `create_date` datetime(3) DEFAULT CURRENT_TIMESTAMP(3) COMMENT '创建日期',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='系统数据历史';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sys_data_history`
--

LOCK TABLES `sys_data_history` WRITE;
/*!40000 ALTER TABLE `sys_data_history` DISABLE KEYS */;
/*!40000 ALTER TABLE `sys_data_history` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sys_seq`
--

DROP TABLE IF EXISTS `sys_seq`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sys_seq` (
  `seq_name` varchar(200) NOT NULL,
  `seq_id` bigint DEFAULT NULL,
  `seq_desc` varchar(200) DEFAULT NULL,
  `increment_num` int DEFAULT NULL,
  `create_date` datetime(3) DEFAULT NULL,
  `last_update` datetime(3) DEFAULT NULL,
  PRIMARY KEY (`seq_name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='SYS序列';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sys_seq`
--

LOCK TABLES `sys_seq` WRITE;
/*!40000 ALTER TABLE `sys_seq` DISABLE KEYS */;
INSERT INTO `sys_seq` VALUES ('CodeCritLog',10000,'CodeCritLog',1,'2024-02-20 11:16:48.000','2024-02-20 11:16:48.000'),('CodeDataHistory',1111,'CodeDataHistory',1,'2023-09-26 15:30:22.000','2024-01-06 22:56:07.000'),('CodeTemplate',20,'CodeTemplate',1,'2023-09-26 15:30:22.000','2023-10-07 23:28:01.000'),('CodeTemplateGroup',10010,'CodeTemplateGroup',1,'2023-09-26 15:30:22.000','2024-02-20 11:16:29.000'),('SysDataHistory',10000,'SysDataHistory',1,'2024-06-19 12:24:32.000','2024-06-19 12:24:32.000');
/*!40000 ALTER TABLE `sys_seq` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `code_template_group`
--

DROP TABLE IF EXISTS `code_template_group`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `code_template_group` (
  `id` bigint NOT NULL COMMENT 'id',
  `group_type` int DEFAULT NULL COMMENT '数据源类型',
  `group_name` varchar(100) DEFAULT NULL COMMENT '模板组名',
  `group_desc` varchar(100) DEFAULT NULL COMMENT '模板组描述',
  `create_date` datetime(3) DEFAULT NULL COMMENT '创建日期',
  `modify_date` datetime(3) DEFAULT NULL COMMENT '修改日期',
  `state` int NOT NULL COMMENT '状态。1正常-1标记删除',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='代码模版组';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `code_template_group`
--

LOCK TABLES `code_template_group` WRITE;
/*!40000 ALTER TABLE `code_template_group` DISABLE KEYS */;
INSERT INTO `code_template_group` VALUES (1,1,'springboot后端代码','生成包括entity，dto，controller相关的代码','2023-10-07 23:28:01.000','2024-02-05 10:49:03.953',1),(2,2,'vue3前端代码','生成包括api，router，pages的相关代码.','2023-10-07 23:28:01.000','2024-02-20 11:16:13.094',1),(3,2,'jmeter模板','jmeter模板','2023-10-07 23:28:01.000','2023-10-07 23:28:01.000',1),(5,2,'vue3的i18n资源文件','生成vu3代码，包含i18n的资源文件。','2023-10-07 23:28:01.000','2023-10-07 23:28:01.000',1),(6,2,'vue3+i8n(pc版)','生成包括api，router，pages，i18n的相关代码。','2023-10-07 23:28:01.000','2023-10-07 23:28:01.000',1),(8,2,'vue3+uniapp(移动版)','生成uniapp模板的接口代码','2023-10-07 23:28:01.000','2023-10-07 23:28:01.000',1);
/*!40000 ALTER TABLE `code_template_group` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2024-06-20 15:29:05
